#include <SDL2/SDL.h>
#include <duktape.h>
#ifndef PUSH
#define PUSH
// Pushes an enum value into the Duktape context
void push(duk_context *ctx, int val, const char* name) {
    duk_push_number(ctx, val);
    duk_put_prop_string(ctx, -2,name);
}
#endif
// Initializes SDL event types in the Duktape context
void initKeys(duk_context *ctx) {

    // Pushing SDL key symbols into the object
    push(ctx, SDLK_UNKNOWN, "SDLK_UNKNOWN");
    push(ctx, SDLK_RETURN, "SDLK_RETURN");
    push(ctx, SDLK_ESCAPE, "SDLK_ESCAPE");
    push(ctx, SDLK_BACKSPACE, "SDLK_BACKSPACE");
    push(ctx, SDLK_TAB, "SDLK_TAB");
    push(ctx, SDLK_SPACE, "SDLK_SPACE");
    push(ctx, SDLK_EXCLAIM, "SDLK_EXCLAIM");
    push(ctx, SDLK_QUOTEDBL, "SDLK_QUOTEDBL");
    push(ctx, SDLK_HASH, "SDLK_HASH");
    push(ctx, SDLK_PERCENT, "SDLK_PERCENT");
    push(ctx, SDLK_DOLLAR, "SDLK_DOLLAR");
    push(ctx, SDLK_AMPERSAND, "SDLK_AMPERSAND");
    push(ctx, SDLK_QUOTE, "SDLK_QUOTE");
    push(ctx, SDLK_LEFTPAREN, "SDLK_LEFTPAREN");
    push(ctx, SDLK_RIGHTPAREN, "SDLK_RIGHTPAREN");
    push(ctx, SDLK_ASTERISK, "SDLK_ASTERISK");
    push(ctx, SDLK_PLUS, "SDLK_PLUS");
    push(ctx, SDLK_COMMA, "SDLK_COMMA");
    push(ctx, SDLK_MINUS, "SDLK_MINUS");
    push(ctx, SDLK_PERIOD, "SDLK_PERIOD");
    push(ctx, SDLK_SLASH, "SDLK_SLASH");
    push(ctx, SDLK_0, "SDLK_0");
    push(ctx, SDLK_1, "SDLK_1");
    push(ctx, SDLK_2, "SDLK_2");
    push(ctx, SDLK_3, "SDLK_3");
    push(ctx, SDLK_4, "SDLK_4");
    push(ctx, SDLK_5, "SDLK_5");
    push(ctx, SDLK_6, "SDLK_6");
    push(ctx, SDLK_7, "SDLK_7");
    push(ctx, SDLK_8, "SDLK_8");
    push(ctx, SDLK_9, "SDLK_9");
    push(ctx, SDLK_COLON, "SDLK_COLON");
    push(ctx, SDLK_SEMICOLON, "SDLK_SEMICOLON");
    push(ctx, SDLK_LESS, "SDLK_LESS");
    push(ctx, SDLK_EQUALS, "SDLK_EQUALS");
    push(ctx, SDLK_GREATER, "SDLK_GREATER");
    push(ctx, SDLK_QUESTION, "SDLK_QUESTION");
    push(ctx, SDLK_AT, "SDLK_AT");
    push(ctx, SDLK_LEFTBRACKET, "SDLK_LEFTBRACKET");
    push(ctx, SDLK_BACKSLASH, "SDLK_BACKSLASH");
    push(ctx, SDLK_RIGHTBRACKET, "SDLK_RIGHTBRACKET");
    push(ctx, SDLK_CARET, "SDLK_CARET");
    push(ctx, SDLK_UNDERSCORE, "SDLK_UNDERSCORE");
    push(ctx, SDLK_BACKQUOTE, "SDLK_BACKQUOTE");
    push(ctx, SDLK_a, "SDLK_a");
    push(ctx, SDLK_b, "SDLK_b");
    push(ctx, SDLK_c, "SDLK_c");
    push(ctx, SDLK_d, "SDLK_d");
    push(ctx, SDLK_e, "SDLK_e");
    push(ctx, SDLK_f, "SDLK_f");
    push(ctx, SDLK_g, "SDLK_g");
    push(ctx, SDLK_h, "SDLK_h");
    push(ctx, SDLK_i, "SDLK_i");
    push(ctx, SDLK_j, "SDLK_j");
    push(ctx, SDLK_k, "SDLK_k");
    push(ctx, SDLK_l, "SDLK_l");
    push(ctx, SDLK_m, "SDLK_m");
    push(ctx, SDLK_n, "SDLK_n");
    push(ctx, SDLK_o, "SDLK_o");
    push(ctx, SDLK_p, "SDLK_p");
    push(ctx, SDLK_q, "SDLK_q");
    push(ctx, SDLK_r, "SDLK_r");
    push(ctx, SDLK_s, "SDLK_s");
    push(ctx, SDLK_t, "SDLK_t");
    push(ctx, SDLK_u, "SDLK_u");
    push(ctx, SDLK_v, "SDLK_v");
    push(ctx, SDLK_w, "SDLK_w");
    push(ctx, SDLK_x, "SDLK_x");
    push(ctx, SDLK_y, "SDLK_y");
    push(ctx, SDLK_z, "SDLK_z");
    push(ctx, SDLK_CAPSLOCK, "SDLK_CAPSLOCK");
    push(ctx, SDLK_F1, "SDLK_F1");
    push(ctx, SDLK_F2, "SDLK_F2");
    push(ctx, SDLK_F3, "SDLK_F3");
    push(ctx, SDLK_F4, "SDLK_F4");
    push(ctx, SDLK_F5, "SDLK_F5");
    push(ctx, SDLK_F6, "SDLK_F6");
    push(ctx, SDLK_F7, "SDLK_F7");
    push(ctx, SDLK_F8, "SDLK_F8");
    push(ctx, SDLK_F9, "SDLK_F9");
    push(ctx, SDLK_F10, "SDLK_F10");
    push(ctx, SDLK_F11, "SDLK_F11");
    push(ctx, SDLK_F12, "SDLK_F12");
    push(ctx, SDLK_PRINTSCREEN, "SDLK_PRINTSCREEN");
    push(ctx, SDLK_SCROLLLOCK, "SDLK_SCROLLLOCK");
    push(ctx, SDLK_PAUSE, "SDLK_PAUSE");
    push(ctx, SDLK_INSERT, "SDLK_INSERT");
    push(ctx, SDLK_HOME, "SDLK_HOME");
    push(ctx, SDLK_PAGEUP, "SDLK_PAGEUP");
    push(ctx, SDLK_DELETE, "SDLK_DELETE");
    push(ctx, SDLK_END, "SDLK_END");
    push(ctx, SDLK_PAGEDOWN, "SDLK_PAGEDOWN");
    push(ctx, SDLK_RIGHT, "SDLK_RIGHT");
    push(ctx, SDLK_LEFT, "SDLK_LEFT");
    push(ctx, SDLK_DOWN, "SDLK_DOWN");
    push(ctx, SDLK_UP, "SDLK_UP");
    push(ctx, SDLK_NUMLOCKCLEAR, "SDLK_NUMLOCKCLEAR");
    push(ctx, SDLK_KP_DIVIDE, "SDLK_KP_DIVIDE");
    push(ctx, SDLK_KP_MULTIPLY, "SDLK_KP_MULTIPLY");
    push(ctx, SDLK_KP_MINUS, "SDLK_KP_MINUS");
    push(ctx, SDLK_KP_PLUS, "SDLK_KP_PLUS");
    push(ctx, SDLK_KP_ENTER, "SDLK_KP_ENTER");
    push(ctx, SDLK_KP_1, "SDLK_KP_1");
    push(ctx, SDLK_KP_2, "SDLK_KP_2");
    push(ctx, SDLK_KP_3, "SDLK_KP_3");
    push(ctx, SDLK_KP_4, "SDLK_KP_4");
    push(ctx, SDLK_KP_5, "SDLK_KP_5");
    push(ctx, SDLK_KP_6, "SDLK_KP_6");
    push(ctx, SDLK_KP_7, "SDLK_KP_7");
    push(ctx, SDLK_KP_8, "SDLK_KP_8");
    push(ctx, SDLK_KP_9, "SDLK_KP_9");
    push(ctx, SDLK_KP_0, "SDLK_KP_0");
    push(ctx, SDLK_KP_PERIOD, "SDLK_KP_PERIOD");
    push(ctx, SDLK_APPLICATION, "SDLK_APPLICATION");
    push(ctx, SDLK_POWER, "SDLK_POWER");
    push(ctx, SDLK_KP_EQUALS, "SDLK_KP_EQUALS");
    push(ctx, SDLK_F13, "SDLK_F13");
    push(ctx, SDLK_F14, "SDLK_F14");
    push(ctx, SDLK_F15, "SDLK_F15");
    push(ctx, SDLK_F16, "SDLK_F16");
    push(ctx, SDLK_F17, "SDLK_F17");
    push(ctx, SDLK_F18, "SDLK_F18");
    push(ctx, SDLK_F19, "SDLK_F19");
    push(ctx, SDLK_F20, "SDLK_F20");
    push(ctx, SDLK_F21, "SDLK_F21");
    push(ctx, SDLK_F22, "SDLK_F22");
    push(ctx, SDLK_F23, "SDLK_F23");
    push(ctx, SDLK_F24, "SDLK_F24");
    push(ctx, SDLK_EXECUTE, "SDLK_EXECUTE");
    push(ctx, SDLK_HELP, "SDLK_HELP");
    push(ctx, SDLK_MENU, "SDLK_MENU");
    push(ctx, SDLK_SELECT, "SDLK_SELECT");
    push(ctx, SDLK_STOP, "SDLK_STOP");
    push(ctx, SDLK_AGAIN, "SDLK_AGAIN");
    push(ctx, SDLK_UNDO, "SDLK_UNDO");
    push(ctx, SDLK_CUT, "SDLK_CUT");
    push(ctx, SDLK_COPY, "SDLK_COPY");
    push(ctx, SDLK_PASTE, "SDLK_PASTE");
    push(ctx, SDLK_FIND, "SDLK_FIND");
    push(ctx, SDLK_MUTE, "SDLK_MUTE");
    push(ctx, SDLK_VOLUMEUP, "SDLK_VOLUMEUP");
    push(ctx, SDLK_VOLUMEDOWN, "SDLK_VOLUMEDOWN");
    push(ctx, SDLK_KP_COMMA, "SDLK_KP_COMMA");
    push(ctx, SDLK_KP_EQUALSAS400, "SDLK_KP_EQUALSAS400");
    push(ctx, SDLK_ALTERASE, "SDLK_ALTERASE");
    push(ctx, SDLK_SYSREQ, "SDLK_SYSREQ");
    push(ctx, SDLK_CANCEL, "SDLK_CANCEL");
    push(ctx, SDLK_CLEAR, "SDLK_CLEAR");
    push(ctx, SDLK_PRIOR, "SDLK_PRIOR");
    push(ctx, SDLK_RETURN2, "SDLK_RETURN2");
    push(ctx, SDLK_SEPARATOR, "SDLK_SEPARATOR");
    push(ctx, SDLK_OUT, "SDLK_OUT");
    push(ctx, SDLK_OPER, "SDLK_OPER");
    push(ctx, SDLK_CLEARAGAIN, "SDLK_CLEARAGAIN");
    push(ctx, SDLK_CRSEL, "SDLK_CRSEL");
    push(ctx, SDLK_EXSEL, "SDLK_EXSEL");
    push(ctx, SDLK_KP_00, "SDLK_KP_00");
    push(ctx, SDLK_KP_000, "SDLK_KP_000");
    push(ctx, SDLK_THOUSANDSSEPARATOR, "SDLK_THOUSANDSSEPARATOR");
    push(ctx, SDLK_DECIMALSEPARATOR, "SDLK_DECIMALSEPARATOR");
    push(ctx, SDLK_CURRENCYUNIT, "SDLK_CURRENCYUNIT");
    push(ctx, SDLK_CURRENCYSUBUNIT, "SDLK_CURRENCYSUBUNIT");
    push(ctx, SDLK_KP_LEFTPAREN, "SDLK_KP_LEFTPAREN");
    push(ctx, SDLK_KP_RIGHTPAREN, "SDLK_KP_RIGHTPAREN");
    push(ctx, SDLK_KP_LEFTBRACE, "SDLK_KP_LEFTBRACE");
    push(ctx, SDLK_KP_RIGHTBRACE, "SDLK_KP_RIGHTBRACE");
    push(ctx, SDLK_KP_TAB, "SDLK_KP_TAB");
    push(ctx, SDLK_KP_BACKSPACE, "SDLK_KP_BACKSPACE");
    push(ctx, SDLK_KP_A, "SDLK_KP_A");
    push(ctx, SDLK_KP_B, "SDLK_KP_B");
    push(ctx, SDLK_KP_C, "SDLK_KP_C");
    push(ctx, SDLK_KP_D, "SDLK_KP_D");
    push(ctx, SDLK_KP_E, "SDLK_KP_E");
    push(ctx, SDLK_KP_F, "SDLK_KP_F");
    push(ctx, SDLK_KP_XOR, "SDLK_KP_XOR");
    push(ctx, SDLK_KP_POWER, "SDLK_KP_POWER");
    push(ctx, SDLK_KP_PERCENT, "SDLK_KP_PERCENT");
    push(ctx, SDLK_KP_LESS, "SDLK_KP_LESS");
    push(ctx, SDLK_KP_GREATER, "SDLK_KP_GREATER");
    push(ctx, SDLK_KP_AMPERSAND, "SDLK_KP_AMPERSAND");
    push(ctx, SDLK_KP_DBLAMPERSAND, "SDLK_KP_DBLAMPERSAND");
    push(ctx, SDLK_KP_VERTICALBAR, "SDLK_KP_VERTICALBAR");
    push(ctx, SDLK_KP_DBLVERTICALBAR, "SDLK_KP_DBLVERTICALBAR");
    push(ctx, SDLK_KP_COLON, "SDLK_KP_COLON");
    push(ctx, SDLK_KP_HASH, "SDLK_KP_HASH");
    push(ctx, SDLK_KP_SPACE, "SDLK_KP_SPACE");
    push(ctx, SDLK_KP_AT, "SDLK_KP_AT");
    push(ctx, SDLK_KP_EXCLAM, "SDLK_KP_EXCLAM");
    push(ctx, SDLK_KP_MEMSTORE, "SDLK_KP_MEMSTORE");
    push(ctx, SDLK_KP_MEMRECALL, "SDLK_KP_MEMRECALL");
    push(ctx, SDLK_KP_MEMCLEAR, "SDLK_KP_MEMCLEAR");
    push(ctx, SDLK_KP_MEMADD, "SDLK_KP_MEMADD");
    push(ctx, SDLK_KP_MEMSUBTRACT, "SDLK_KP_MEMSUBTRACT");
    push(ctx, SDLK_KP_MEMMULTIPLY, "SDLK_KP_MEMMULTIPLY");
    push(ctx, SDLK_KP_MEMDIVIDE, "SDLK_KP_MEMDIVIDE");
    push(ctx, SDLK_KP_PLUSMINUS, "SDLK_KP_PLUSMINUS");
    push(ctx, SDLK_KP_CLEAR, "SDLK_KP_CLEAR");
    push(ctx, SDLK_KP_CLEARENTRY, "SDLK_KP_CLEARENTRY");
    push(ctx, SDLK_KP_BINARY, "SDLK_KP_BINARY");
    push(ctx, SDLK_KP_OCTAL, "SDLK_KP_OCTAL");
    push(ctx, SDLK_KP_DECIMAL, "SDLK_KP_DECIMAL");
    push(ctx, SDLK_KP_HEXADECIMAL, "SDLK_KP_HEXADECIMAL");
    push(ctx, SDLK_LCTRL, "SDLK_LCTRL");
    push(ctx, SDLK_LSHIFT, "SDLK_LSHIFT");
    push(ctx, SDLK_LALT, "SDLK_LALT");
    push(ctx, SDLK_LGUI, "SDLK_LGUI");
    push(ctx, SDLK_RCTRL, "SDLK_RCTRL");
    push(ctx, SDLK_RSHIFT, "SDLK_RSHIFT");
    push(ctx, SDLK_RALT, "SDLK_RALT");
    push(ctx, SDLK_RGUI, "SDLK_RGUI");
    push(ctx, SDLK_MODE, "SDLK_MODE");
    push(ctx, SDLK_AUDIONEXT, "SDLK_AUDIONEXT");
    push(ctx, SDLK_AUDIOPREV, "SDLK_AUDIOPREV");
    push(ctx, SDLK_AUDIOSTOP, "SDLK_AUDIOSTOP");
    push(ctx, SDLK_AUDIOPLAY, "SDLK_AUDIOPLAY");
    push(ctx, SDLK_AUDIOMUTE, "SDLK_AUDIOMUTE");
    push(ctx, SDLK_MEDIASELECT, "SDLK_MEDIASELECT");
    push(ctx, SDLK_WWW, "SDLK_WWW");
    push(ctx, SDLK_MAIL, "SDLK_MAIL");
    push(ctx, SDLK_CALCULATOR, "SDLK_CALCULATOR");
    push(ctx, SDLK_COMPUTER, "SDLK_COMPUTER");
    push(ctx, SDLK_AC_SEARCH, "SDLK_AC_SEARCH");
    push(ctx, SDLK_AC_HOME, "SDLK_AC_HOME");
    push(ctx, SDLK_AC_BACK, "SDLK_AC_BACK");
    push(ctx, SDLK_AC_FORWARD, "SDLK_AC_FORWARD");
    push(ctx, SDLK_AC_STOP, "SDLK_AC_STOP");
    push(ctx, SDLK_AC_REFRESH, "SDLK_AC_REFRESH");
    push(ctx, SDLK_AC_BOOKMARKS, "SDLK_AC_BOOKMARKS");
    push(ctx, SDLK_BRIGHTNESSDOWN, "SDLK_BRIGHTNESSDOWN");
    push(ctx, SDLK_BRIGHTNESSUP, "SDLK_BRIGHTNESSUP");
    push(ctx, SDLK_DISPLAYSWITCH, "SDLK_DISPLAYSWITCH");
    push(ctx, SDLK_KBDILLUMTOGGLE, "SDLK_KBDILLUMTOGGLE");
    push(ctx, SDLK_KBDILLUMDOWN, "SDLK_KBDILLUMDOWN");
    push(ctx, SDLK_KBDILLUMUP, "SDLK_KBDILLUMUP");
    push(ctx, SDLK_EJECT, "SDLK_EJECT");
    push(ctx, SDLK_SLEEP, "SDLK_SLEEP");
}
