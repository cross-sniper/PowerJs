#include <SDL2/SDL.h>
#include <duktape.h>
#ifndef PUSH
#define PUSH
// Pushes an enum value into the Duktape context
void push(duk_context *ctx, int val, const char* name) {
    duk_push_number(ctx, val);
    duk_put_prop_string(ctx, -2,name);
}

#endif

// Initializes SDL event types in the Duktape context
void initEvents(duk_context *ctx) {


    // Pushing SDL event types into the object
    push(ctx, SDL_QUIT, "SDL_QUIT");
    push(ctx, SDL_APP_TERMINATING, "SDL_APP_TERMINATING");
    push(ctx, SDL_APP_LOWMEMORY, "SDL_APP_LOWMEMORY");
    push(ctx, SDL_APP_WILLENTERBACKGROUND, "SDL_APP_WILLENTERBACKGROUND");
    push(ctx, SDL_APP_DIDENTERBACKGROUND, "SDL_APP_DIDENTERBACKGROUND");
    push(ctx, SDL_APP_WILLENTERFOREGROUND, "SDL_APP_WILLENTERFOREGROUND");
    push(ctx, SDL_APP_DIDENTERFOREGROUND, "SDL_APP_DIDENTERFOREGROUND");
    push(ctx, SDL_LOCALECHANGED, "SDL_LOCALECHANGED");
    push(ctx, SDL_DISPLAYEVENT, "SDL_DISPLAYEVENT");
    push(ctx, SDL_WINDOWEVENT, "SDL_WINDOWEVENT");
    push(ctx, SDL_SYSWMEVENT, "SDL_SYSWMEVENT");
    push(ctx, SDL_KEYDOWN, "SDL_KEYDOWN");
    push(ctx, SDL_KEYUP, "SDL_KEYUP");
    push(ctx, SDL_TEXTEDITING, "SDL_TEXTEDITING");
    push(ctx, SDL_TEXTINPUT, "SDL_TEXTINPUT");
    push(ctx, SDL_KEYMAPCHANGED, "SDL_KEYMAPCHANGED");
    push(ctx, SDL_TEXTEDITING_EXT, "SDL_TEXTEDITING_EXT");
    push(ctx, SDL_MOUSEMOTION, "SDL_MOUSEMOTION");
    push(ctx, SDL_MOUSEBUTTONDOWN, "SDL_MOUSEBUTTONDOWN");
    push(ctx, SDL_MOUSEBUTTONUP, "SDL_MOUSEBUTTONUP");
    push(ctx, SDL_MOUSEWHEEL, "SDL_MOUSEWHEEL");
    push(ctx, SDL_JOYAXISMOTION, "SDL_JOYAXISMOTION");
    push(ctx, SDL_JOYBALLMOTION, "SDL_JOYBALLMOTION");
    push(ctx, SDL_JOYHATMOTION, "SDL_JOYHATMOTION");
    push(ctx, SDL_JOYBUTTONDOWN, "SDL_JOYBUTTONDOWN");
    push(ctx, SDL_JOYBUTTONUP, "SDL_JOYBUTTONUP");
    push(ctx, SDL_JOYDEVICEADDED, "SDL_JOYDEVICEADDED");
    push(ctx, SDL_JOYDEVICEREMOVED, "SDL_JOYDEVICEREMOVED");
    push(ctx, SDL_JOYBATTERYUPDATED, "SDL_JOYBATTERYUPDATED");
    push(ctx, SDL_CONTROLLERAXISMOTION, "SDL_CONTROLLERAXISMOTION");
    push(ctx, SDL_CONTROLLERBUTTONDOWN, "SDL_CONTROLLERBUTTONDOWN");
    push(ctx, SDL_CONTROLLERBUTTONUP, "SDL_CONTROLLERBUTTONUP");
    push(ctx, SDL_CONTROLLERDEVICEADDED, "SDL_CONTROLLERDEVICEADDED");
    push(ctx, SDL_CONTROLLERDEVICEREMOVED, "SDL_CONTROLLERDEVICEREMOVED");
    push(ctx, SDL_CONTROLLERDEVICEREMAPPED, "SDL_CONTROLLERDEVICEREMAPPED");
    push(ctx, SDL_CONTROLLERTOUCHPADDOWN, "SDL_CONTROLLERTOUCHPADDOWN");
    push(ctx, SDL_CONTROLLERTOUCHPADMOTION, "SDL_CONTROLLERTOUCHPADMOTION");
    push(ctx, SDL_CONTROLLERTOUCHPADUP, "SDL_CONTROLLERTOUCHPADUP");
    push(ctx, SDL_CONTROLLERSENSORUPDATE, "SDL_CONTROLLERSENSORUPDATE");
    push(ctx, SDL_CONTROLLERSTEAMHANDLEUPDATED, "SDL_CONTROLLERSTEAMHANDLEUPDATED");
    push(ctx, SDL_FINGERDOWN, "SDL_FINGERDOWN");
    push(ctx, SDL_FINGERUP, "SDL_FINGERUP");
    push(ctx, SDL_FINGERMOTION, "SDL_FINGERMOTION");
    push(ctx, SDL_DOLLARGESTURE, "SDL_DOLLARGESTURE");
    push(ctx, SDL_DOLLARRECORD, "SDL_DOLLARRECORD");
    push(ctx, SDL_MULTIGESTURE, "SDL_MULTIGESTURE");
    push(ctx, SDL_CLIPBOARDUPDATE, "SDL_CLIPBOARDUPDATE");
    push(ctx, SDL_DROPFILE, "SDL_DROPFILE");
    push(ctx, SDL_DROPTEXT, "SDL_DROPTEXT");
    push(ctx, SDL_DROPBEGIN, "SDL_DROPBEGIN");
    push(ctx, SDL_DROPCOMPLETE, "SDL_DROPCOMPLETE");
    push(ctx, SDL_AUDIODEVICEADDED, "SDL_AUDIODEVICEADDED");
    push(ctx, SDL_AUDIODEVICEREMOVED, "SDL_AUDIODEVICEREMOVED");
    push(ctx, SDL_SENSORUPDATE, "SDL_SENSORUPDATE");
    push(ctx, SDL_RENDER_TARGETS_RESET, "SDL_RENDER_TARGETS_RESET");
    push(ctx, SDL_RENDER_DEVICE_RESET, "SDL_RENDER_DEVICE_RESET");
    push(ctx, SDL_POLLSENTINEL, "SDL_POLLSENTINEL");
    push(ctx, SDL_USEREVENT, "SDL_USEREVENT");
    push(ctx, SDL_LASTEVENT, "SDL_LASTEVENT");

}
